wb = xlsx_package.workbook
wb.styles do |s|
	head = s.add_style( {
				:fg_color => "00", 
				:b => true, 
				:sz => 18
	})
	column_head = s.add_style( { 
					:fg_color => "00",
					:b => true, 
					:border => {
							:style => :thin,
							:color => "00",
							:edges => [:top, :bottom] 
					}
	})
	label = s.add_style( {
					:b => true
	})
	bottom_row_border = s.add_style :border => {:style => :thick, :color => "00", :edges => [:bottom] }
	row_border = s.add_style :border => {:style => :thin, :color => "00", :edges => [:bottom] }
	alternate_row = s.add_style({ 
					:bg_color => 'EE',
					:border => {:style => :thin, :color => "00", :edges => [:bottom] }
	})
	wb.add_worksheet( :name => 'Order Sheet' ) do |sheet|
		sheet.add_row  ['Graeters Order Sheet'], :style => head, :height => 40
		sheet.merge_cells( 'A1:E1' )

		sheet.add_row
		
		chain_row = sheet.add_row
		chain_row.add_cell "Customer", :style => label
		chain_row.add_cell order.store.company[:name]

		# Blank row separating the labels
		sheet.add_row		

		po_row = sheet.add_row
		po_row.add_cell "PO", :style => label
		po_row.add_cell order[:invoice_number], :style => s.add_style({:alignment => {:horizontal => :left}})

		# Blank row separating the labels
		sheet.add_row		

		deliver_by= sheet.add_row
		deliver_by.add_cell "Deliver By", :style => label
		deliver_by.add_cell order.delivery_day_of_the_week

		# Blank row separating the labels
		sheet.add_row		

		store_row = sheet.add_row
		store_row.add_cell "Ship to", :style => label
		store_row.add_cell order.store.full_name
		store_row = sheet.add_row
		store_row.add_cell
		store_row.add_cell order.store.address

		# Blank row separating the labels
		sheet.add_row		

		sheet.add_row %w(Stock\ # Description U/M Quantity Sleeves), :style => column_head, :height => 20
		
		sleeve_total = 0
		index = 0
		
		order.product_orders.sort{|x| x.product[:sort_order_for_order_sheet]}.each do |product_order|
			row = sheet.add_row
			row.add_cell product_order.product[:code]
			row.add_cell product_order.product[:name]
			row.add_cell product_order.volume_unit[:name]
			row.add_cell product_order[:quantity]
			row.add_cell product_order.sleeves
			if (index%2) != 0
				row.style = alternate_row
			else
				row.style = row_border
			end
			sleeve_total += product_order.sleeves
			index = index + 1
		end

		total_row = sheet.add_row
		3.times { total_row.add_cell }
		total_row.add_cell "Sleeves", :style => label
		total_row.add_cell sleeve_total
		
		sheet.column_widths 12, 25, 5, 9, 9
		
		sheet.rows.last.style = bottom_row_border				
	end
end
